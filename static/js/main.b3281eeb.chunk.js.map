{"version":3,"sources":["logo.svg","OOPSprint00.jsx","OOPSprint01.jsx","OOPSprint02.jsx","credit.js","Test02.js","ShoppingList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","x","getContent","OOPSprint00","className","this","props","name","value","style","listStyleType","href","target","rel","React","Component","OOPSprint01","OOPSprint02","Credit","Test02","ShoppingList","App","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3281eeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nimport React from 'react';\n\nlet x=0\nfunction getContent() { \n\tx++\n\treturn \"<h1>This </h1>\" + (x*5) \n}\n\n\n\nclass OOPSprint00 extends React.Component {\n\trender() {\n\t\treturn (\n\n<div className=\"shopping-list\">\n\n<h1>Shopping List for {this.props.name}</h1>\n<ul>\n\t<li>Instagram {5+5}</li>\n\t<li>WhatsApp</li>\n\t<li>Oculus</li>\n</ul>\n\n{getContent()}\n\n<h3>Object-Oriented Programming{getContent()}</h3>\n\n<form>\n\t<select value=\"Ford\">\n        <option value=\"1\">Sprint 1: Getting Started, Object-Oriented Programming Concepts, and Tools of the Trade</option>\n        <option value=\"Volvo\">Volvo</option>\n        <option value=\"Fiat\">Fiat</option>\n\t</select>\n</form>\n<h3>Sprint 1: Getting Started, Object-Oriented Programming Concepts, and Tools of the Trade</h3>\n\n<p><em>Welcome to Object-Oriented Programming!</em> By this point in your programming journey I'm sure that you are confident\nin writing basic software programs. You've learned about structured programming techniques like sequence, selection,\nand repetition. You've learned how to break complicated programs down into more manageable pieces by using functions.\nThat's great, but to create modern programs you need to master some additional skills. These additional skills are\nwhat object-oriented programming give us.</p>\n\n<p>You have likely noticed that I am using the term “sprint 1” to describe our first set of course activities and\nassignments. Sprints are part of the Scrum development process. The term is used to describe a unit of work which will\nbe delivered in a given amount of time. We will be learning more about sprints and Scrum in the coming days. For now\nit is sufficient to know that our sprint 1 activities listed below are expected to take approximately 20 hours of\nfocused effort to complete.</p>\n\n<p>Let's start with what we hope to learn in sprint 1. By the end of sprint 1 we will be able to:</p>\n<ul style={{ listStyleType: \"square\" }}>\n\t<li>Identify and understand key object-oriented programming concepts and practices</li>\n\t<li>Identify, define, and discuss object-oriented programming patterns</li>\n\t<li>Compile and execute basic Java applications utilizing Java command line tools</li>\n\t<li>Utilize command line and graphical tools to navigate our computer operating system and local file system</li>\n\t<li>Create, edit, and update source code in a text editor</li>\n\t<li>Manage source code utilizing the GitHub and the Git command line client</li>\n\t<li>Understand basic Scrum development techniques</li>\n</ul>\n\n<p>Below is our sprint 1 activities list. Although you are welcome to pursue the activities in any order, they are\nlisted in the order I think will be the most beneficial for you to work through the topics. Each item is expected to\ntake 20 to 40 minutes of focused time unless otherwise noted. Highlighted activities are <em>directly</em> related to \ngraded assignments.</p>\n\n<ol>\n\t<li>Review course syllabus</li>\n\t<li><em>Review Programming Assignment 1, Quiz 1, and Discussion Board 1</em></li>\n\t<li>Understand how Blended Learning, Flipped Classroom, and Online class formats relate by reviewing \"Blended\n\t\tLearning & Flipped Classroom\" \n\t\t<a href=\"https://www.youtube.com/watch?v=paQCE58334M&vl=en-US\" target=\"_blank\" rel=\"noopener noreferrer\">[video]</a></li>\n\t<li>Review “Introduction to Scrum in 7 Minutes”\n\t\t<a href=\"https://www.youtube.com/watch?v=9TycLR0TqFA\">[video]</a></li>\n\t<li>Complete “Object-Oriented Programming Concepts and Practices”\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/object-oriented-programming/concepts-and-practices.mp4\">\n\t\t[video]</a>\n\t\t<a\n\t\thref=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/concepts-and-practices-slides-only.pptx\">\n\t\t[slides]</a> ~1 hour</li>\n\t<li><em>Consistently work on Programming Assignment 1 and Quiz 1 throughout the sprint ~6 hours</em></li>\n\t<li>Install or update MS Windows PowerShell if you are utilizing MS Windows\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/environment-configuration/powershell-windows10-setup.mp4\">\n\t\t[video]</a></li>\n\t<li>Review navigation of your computer local file system utilizing MS Windows PowerShell, MS Windows command prompt,\n\t\tMacOS terminal, or your preferred Linux shell</li>\n\t<li>Install and verify the Java SDK and associated command line tools\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/java-jdk-windows10-setup.mp4\">\n\t\t[video]</a></li>\n\t<li><em>Create your initial Discussion Board 1 post by the middle of the sprint</em></li>\n\n\t<li>Install the Microsoft Visual Studio Code text editor and the Google Chrome web browser\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/mscode-and-chrome-windows10-setup.mp4\">\n\t\t[video]</a>\n\t\t<a href=\"https://www.google.com/chrome/\" target=\"_blank\">[chrome]</a>\n\t\t<a href=\"https://code.visualstudio.com/\">[code]</a></li>\n\t<li>Complete the Java “Hello World” tutorial. As in all tutorials, you should follow along and complete the steps\n\t\tyourself. As you go through the tutorial, you should make the resulting application uniquely your own by adding\n\t\tstandard comments at the top application (i.e. your name, class, etc.), changing the names of variables, adding\n\t\tsmall features, etc. Finally, be sure to save your unique creation as I will often be asking you to submit it as\n\t\tpart of your programming assignment. \n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/java-hello-world.mp4\">[video]</a></li>\n\t<li>If you don’t already have a GitHub account, set up a GitHub account utilizing the Student Developer Pack\n\t\t<a href=\"https://help.github.com/en/articles/applying-for-a-student-developer-pack\">[link]</a></li>\n\t<li>Install the Git command line client\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/git-installation-on-windows-10.mp4\">\n\t\t[video]</a>\n\t\t<a href=\"https://git-scm.com/\">[link]</a></li>\n\t<li>Utilize your GitHub account and Git client to:\n\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t<li>Complete the “An Intro to Git and GitHub for Beginners” tutorial from the GitHub website\n\t\t\t\t<a href=\"https://guides.github.com/activities/hello-world/\" target=\"_blank\">[link]</a></li>\n\t\t\t<li>Complete the “An Intro to Git and GitHub for Beginners” tutorial from HubSpot \n\t\t\t\t<a href=\"https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners\">[link]</a></li>\n\t\t\t<li>Review the “Git Handbook” guide\n\t\t\t\t<a href=\"https://guides.github.com/introduction/git-handbook/\">[link]</a></li>\n\t\t</ul></li>\n\t<li>Complete “Object-Oriented Programming Patterns”\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/object-oriented-programming/patterns.mp4\">[video]</a>\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/patterns-slides-only.pptx\">\n\t\t[slides]</a></li>\n\t<li><em>Complete Discussion Board 1 by responding to at least one of your classmates' posts</em></li>\n\t<li><em>Complete and submit Programming Assignment 1 and Quiz 1</em></li>\n</ol>\n<br />\n<p>Additional references:</p>\n\t<ul style={{ listStyleType: \"square\" }}>\n\t\t<li>Sprint 1 recorded Lecture/Discussion session from a recent (2020) online Object-Oriented Programming class\n\t\t\t<a href=\"https://recordings.join.me/cnMa4X_YHEqYRult_T00qw\" target=\"_blank\">[link]</a></li> \n\t\t<li>Git/GitHub Cheat Sheet\n\t\t\t<a href=\"https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf\"\n\t\t\ttarget=\"_blank\">[link]</a></li> \n\t</ul> \n</div>\n\n\t\t);\n\t}\n}\n\nexport default OOPSprint00\n","\nimport React from 'react';\n\nclass OOPSprint01 extends React.Component {\n\trender() {\n\t\treturn (\n\n<div className=\"sprint-01\">\n<h2>Object-Oriented Programming</h2>\n<h3>Sprint 1: Getting Started, Object-Oriented Programming Concepts, Patterns, and Tools of the Trade</h3>\n\n<p><em>Welcome to Object-Oriented Programming!</em> By this point in your programming journey I'm sure that you are \nconfident in writing basic software programs. You've learned about structured programming techniques like sequence, \nselection, and repetition. You've learned how to break complicated programs down into more manageable pieces by using \nfunctions. That's great, but to create modern programs you need to master some additional skills. These additional skills \nare what object-oriented programming give us.</p>\n\n<p>You have likely noticed that I am using the term “sprint 1” to describe our first set of course activities and\nassignments. Sprints are part of the Scrum development process. The term is used to describe a unit of work which will\nbe delivered in a given amount of time. We will be learning more about sprints and Scrum in the coming days. For now\nit is sufficient to know that our sprint 1 activities listed below are expected to take approximately 18 hours of\nfocused effort to complete.</p>\n\n<p>Let's start with what we hope to learn in sprint 1. By the end of sprint 1 we will be able to:</p>\n<ul style={{ listStyleType: \"square\" }}>\n\t<li>Identify and understand key object-oriented programming concepts</li>\n\t<li>Identify, define, and discuss object-oriented programming patterns</li>\n\t<li>Compile and execute basic Java applications utilizing Java command line tools</li>\n\t<li>Utilize command line and graphical tools to navigate our computer operating system and local file system</li>\n\t<li>Create, edit, and update source code in a text editor</li>\n\t<li>Manage source code utilizing the GitHub and the Git command line client</li>\n\t<li>Understand basic Scrum development techniques</li>\n</ul>\n\n<p>Below is our sprint 1 activities list. Although you are welcome to pursue the activities in any order, they are\nlisted in the order I think will be the most beneficial for you to work through the topics. Each item is expected to\ntake 20 to 40 minutes of focused time unless otherwise noted. Highlighted activities are <em>directly</em> related to \ngraded assignments.</p>\n\n<ol>\n\t<li>Review course syllabus</li>\n\t<li><em>Review Programming Assignment 1, Quiz 1, and Discussion Board 1</em></li>\n\t<li>Understand how Blended Learning, Flipped Classroom, and Online class formats relate by reviewing \"Blended\n\t\tLearning & Flipped Classroom\" \n\t\t<a href=\"https://www.youtube.com/watch?v=paQCE58334M&vl=en-US\" target=\"_blank\" rel=\"noopener noreferrer\">[video]</a></li>\n\t<li>Review “Introduction to Scrum in 7 Minutes”\n\t\t<a href=\"https://www.youtube.com/watch?v=9TycLR0TqFA\">[video]</a></li>\n\t<li>Complete “Object-Oriented Programming Concepts and Practices”\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/object-oriented-programming/concepts-and-practices.mp4\">\n\t\t[video]</a>\n\t\t<a\n\t\thref=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/concepts-and-practices-slides-only.pptx\">\n\t\t[slides]</a> ~1 hour</li>\n\t<li><em>Consistently work on Programming Assignment 1 and Quiz 1 throughout the sprint ~6 hours</em></li>\n\t<li>Install or update MS Windows PowerShell if you are utilizing MS Windows\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/environment-configuration/powershell-windows10-setup.mp4\">\n\t\t[video]</a></li>\n\t<li>Review navigation of your computer local file system utilizing MS Windows PowerShell, MS Windows command prompt,\n\t\tMacOS terminal, or your preferred Linux shell</li>\n\t<li>Install and verify the Java SDK and associated command line tools\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/java-jdk-windows10-setup.mp4\">\n\t\t[video]</a></li>\n\t<li><em>Create your initial Discussion Board 1 post by the middle of the sprint</em></li>\n\n\t<li>Install the Microsoft Visual Studio Code text editor and the Google Chrome web browser\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/mscode-and-chrome-windows10-setup.mp4\">\n\t\t[video]</a>\n\t\t<a href=\"https://www.google.com/chrome/\" target=\"_blank\" rel=\"noopener noreferrer\">[chrome]</a>\n\t\t<a href=\"https://code.visualstudio.com/\">[code]</a></li>\n\t<li>Complete the Java “Hello World” tutorial. As in all tutorials, you should follow along and complete the steps\n\t\tyourself. As you go through the tutorial, you should make the resulting application uniquely your own by adding\n\t\tstandard comments at the top application (i.e. your name, class, etc.), changing the names of variables, adding\n\t\tsmall features, etc. Finally, be sure to save your unique creation as I will often be asking you to submit it as\n\t\tpart of your programming assignment. \n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/java-hello-world.mp4\">[video]</a></li>\n\t<li>If you don’t already have a GitHub account, set up a GitHub account utilizing the Student Developer Pack\n\t\t<a href=\"https://help.github.com/en/articles/applying-for-a-student-developer-pack\">[link]</a></li>\n\t<li>Install the Git command line client\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/environment-configuration/git-installation-on-windows-10.mp4\">\n\t\t[video]</a>\n\t\t<a href=\"https://git-scm.com/\">[link]</a></li>\n\t<li>Utilize your GitHub account and Git client to:\n\t\t<ul style={{ listStyleType: \"square\" }}>\n\t\t\t<li>Complete the “An Intro to Git and GitHub for Beginners” tutorial from the GitHub website\n\t\t\t\t<a href=\"https://guides.github.com/activities/hello-world/\" target=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li>\n\t\t\t<li>Complete the “An Intro to Git and GitHub for Beginners” tutorial from HubSpot \n\t\t\t\t<a href=\"https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners\" target=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li>\n\t\t\t<li>Review the “Git Handbook” guide\n\t\t\t\t<a href=\"https://guides.github.com/introduction/git-handbook/\" target=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li>\n\t\t</ul></li>\n\t<li>Complete “Object-Oriented Programming Patterns”\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/object-oriented-programming/patterns.mp4\">[video]</a>\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/patterns-slides-only.pptx\">\n\t\t[slides]</a></li>\n\t<li><em>Complete Discussion Board 1 by responding to at least one of your classmates' posts</em></li>\n\t<li><em>Complete and submit Programming Assignment 1 and Quiz 1</em></li>\n</ol>\n<br />\n<p>Additional references:</p>\n\t<ul style={{ listStyleType: \"square\" }}>\n\t\t<li>Sprint 1 recorded Lecture/Discussion session from a recent (2020) online Object-Oriented Programming class\n\t\t\t<a href=\"https://recordings.join.me/cnMa4X_YHEqYRult_T00qw\">[link]</a></li> \n\t\t<li>Git/GitHub Cheat Sheet\n\t\t\t<a href=\"https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf\"\n\t\t\ttarget=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li> \n\t</ul> \n</div>\n\n\t\t);\n\t}\n}\n\nexport default OOPSprint01\n","\nimport React from 'react';\n\nclass OOPSprint02 extends React.Component {\n\trender() {\n\t\treturn (\n\n<div className=\"sprint-02\">\n<h3>Object-Oriented Programming</h3>\n<form>\n\t<select value=\"SprintNumber\">\n\t\t<option value=\"1\">Sprint 1: Getting Started, Object-Oriented Programming Concepts, and Tools of the Trade</option>\n\t\t<option value=\"2\">Sprint 2: Patterns, Principles, and Java Programming</option>\n\t\t<option value=\"3\">Next up...</option>\n\t</select>\n</form>\n\n<p><em>Welcome to sprint 2.</em> We covered a lot of material in sprint 1. However, we didn't get a\nchance to write much code. This sprint get your Java compilers out. We are going to start practicing some of the\nconcepts we learned. </p>\n\n<p>By the end of sprint 2 we will be able to:</p>\n<ul style={{ listStyleType:\"square\" }}>\n\t<li>Identify, define, and discuss OOP Principles</li>\n\t<li>Create, modify, compile, and execute OOP based Java applications</li>\n\t<li>Manage and submit source code utilizing the GitHub and the Git command line client</li>\n\t<li>Utilize JSON to represent program data</li>\n</ul>\n\n<p>Below is the list of activities that we will need to complete this sprint. Once again you are welcome to\npursue the activities in any order you prefer. However, they are listed in the order I think will be the most\nbeneficial for you to work through the topics. The time commitment for each line item is generally 20 to 40\nminutes unless otherwise noted.</p>\n<ol>\n\t<li><em>Review Programming Assignment 2, Quiz 2, and Discussion Board 2</em></li>\n\t<li>Analyze and commit to adopting the “How to Be a Success Programmer” suggestions that you feel are the\n\t\tmost important \n\t\t<a href=\"https://cpsc-24500.azurewebsites.net/successful-programmer.html\">[link]</a></li>\n\t<li>Sign up for Safari Books Online which is available to you free through Lewis University\n\t\t<a href=\"https://www.oreilly.com/library/view/temporary-access/\">[link]</a></li>\n\t<li>Within Safari Books Online execute searches for Object-Oriented Programming, OOP, Git, GitHub, and Java\n\t\tand review the results of each search</li>\n\t<li>Review the answers to Quiz 1 as many of the topics in Quiz 1 will come up in future so it is important\n\t\tthat you understand the concepts question</li>\t\t\t\t\t\t\t \n\t<li>Complete the Java \"Shapes Step 1\" tutorial. As will all tutorials, be sure to follow along and complete\n\t\tthe steps yourself, make the resulting application uniquely your own, and to be ready to submit your\n\t\tpersonalized version of the application as part of an assignment\t\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/java-shapes-step1.mp4\">[video]</a></li> \n\t<li>Complete the Java “Shapes Step 2” tutorial\n\t\t<a href=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/java-shapes-step2.mp4\">[video]</a></li>\n\t<li>Complete your initial Discussion Board (DB) post by the middle of the sprint</li>\n\t<li>Complete “Object-Oriented Programming Principles”\n\t\t<a href=\"http://mediaatoz.blob.core.windows.net/object-oriented-programming/principles.mp4\">[video]</a>\n\t\t<a\n\t\thref=\"https://mediaatoz.blob.core.windows.net/object-oriented-programming/principles-slides-only.pptx\">[slides]</a></li>\n\t<li>Read and Understand the article “What is JSON? JavaScript Object Notation explained” \n\t\t<a\n\t\thref=\"https://www.infoworld.com/article/3222851/javascript/what-is-json-javascript-object-notation-explained.html\"\n\t\ttarget=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li> \n\t<li>Read and Understand “JSON Introduction” from W3C \n\t\t<a href=\"https://www.w3schools.com/js/js_json_intro.asp\" target=\"_blank\" rel=\"noopener noreferrer\">[link]</a></li> \n\t<li>If you do not already have access to a current version of Microsoft Office, install the current\n\t\tMicrosoft PowerPoint (PowerPoint Mobile) and Word (Word Mobile) viewers\n\t\t<a\n\t\thref=\"http://mediaatoz.blob.core.windows.net/environment-configuration/powerpoint-mobile-viewer-installation.mp4\">[video]</a>\n\t\t<a\n\t\thref=\"https://www.microsoft.com/en-us/p/powerpoint-mobile/9wzdncrfjb5q?activetab=pivot%3Aoverviewtab\">[link]</a></li>\n\t<li><em>Complete Discussion Board 2 by responding to at least one of your classmates' posts</em></li>\n\t<li><em>Complete and submit Programming Assignment 2 and Quiz 2</em></li>\n</ol> \n<p>Feel free to post a note in our class forum or to send me an email you have questions.</p> \n<br />\n<p>Additional external references are provided below:</p>\n<ul style={{ listStyleType:\"square\" }}>\n\t<li>Sprint 2 Recorded Lecture/Discussion session from the Spring 2020 online Object-Oriented Programming class\n\t\t<a href=\"https://botb.blob.core.windows.net/ovun/2020-01-22_sprint-02-oop.mp4\">[link]</a></li>\n\t<li>Git/GitHub Cheat Sheet\t\n\t\t<a href=\"https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"\n\t\t>[link]</a></li> \n</ul> \n</div>\n\n\t\t);\n\t}\n}\n\nexport default OOPSprint02\n","import React, {Component } from 'react'\n\nclass Credit extends Component {\n\trender() {\n\t  return(<h1>Credits</h1>)\n\t}\n}\n\nexport default Credit;\n","import React, {Component } from 'react'\n\nclass Test02 extends Component {\n\trender() {\n\t  return(<h2>Test Me!</h2>)\n\t}\n}\n\nexport default Test02;\n","\n\nimport React from 'react';\n\nclass ShoppingList extends React.Component {\n  render() {\n    return (\n      <div className=\"shopping-list\">\n        <h1>Shopping List for {this.props.name}</h1>\n        <ul>\n          <li>Instagram {5+5}</li>\n          <li>WhatsApp</li>\n          <li>Oculus</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingList\n\n// Example usage: <ShoppingList name=\"Mark\" />","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport OOPSprint00 from './OOPSprint00'\nimport OOPSprint01 from './OOPSprint01'\nimport OOPSprint02 from './OOPSprint02'\nimport Credit from './credit'\nimport Test02 from './Test02'\nimport ShoppingList from './ShoppingList'\n\nfunction App() {\n\treturn (\n\n<div className=\"App\">\n\t<header className=\"App-header\">\n\n\t</header>\n\t<body>\n\t\t<OOPSprint01 />\n\t\t<OOPSprint02 />\n\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t<OOPSprint00 />\n\t\t<ShoppingList name=\"Eric Pogue\"/>\n\t\t<Credit />\n\t\t<Test02 />\n\t</body>\n</div>\n\n\t);\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}